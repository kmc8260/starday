# streamlit 라이브러리를 가져옵니다.
import streamlit as st
# 날짜 및 시간 관련 작업을 위한 datetime 라이브러리를 가져옵니다.
import datetime
# 간단한 운세 내용을 미리 준비해둡니다.
import random

# 별자리별 운세 내용을 저장하는 딕셔너리
FORTUNES = {
    "물병자리": [
        "새로운 아이디어가 샘솟는 하루입니다. 창의력을 마음껏 발휘해보세요.",
        "주변 사람들과의 소통이 중요한 날입니다. 긍정적인 대화가 행운을 가져다줄 거예요.",
        "오늘은 잠시 쉬어가며 재충전의 시간을 갖는 것이 좋겠습니다."
    ],
    "물고기자리": [
        "감성이 풍부해지는 날입니다. 예술적인 활동으로 스트레스를 풀어보세요.",
        "예상치 못한 좋은 소식이 들려올 수 있습니다. 기회를 놓치지 마세요.",
        "다른 사람의 말을 경청하면, 문제 해결의 실마리를 찾을 수 있을 거예요."
    ],
    "양자리": [
        "에너지가 넘치는 하루! 새로운 도전을 하기에 완벽한 날입니다.",
        "결단력이 빛을 발하는 날입니다. 망설이지 말고 목표를 향해 나아가세요.",
        "운동이나 가벼운 산책으로 활기를 더해보세요."
    ],
    "황소자리": [
        "차분하고 안정적인 하루가 예상됩니다. 꾸준함이 좋은 결과로 이어질 거예요.",
        "금전운이 좋은 날입니다. 신중하게 계획을 세워보세요.",
        "맛있는 음식을 먹으며 소소한 행복을 즐겨보세요."
    ],
    "쌍둥이자리": [
        "호기심이 왕성해지는 날입니다. 새로운 것을 배우기에 좋은 시기예요.",
        "다양한 사람들과의 만남 속에서 즐거움을 찾을 수 있습니다.",
        "재치 있는 말솜씨로 주변을 즐겁게 만들어보세요."
    ],
    "게자리": [
        "가족이나 가까운 친구들과 따뜻한 시간을 보내기 좋은 날입니다.",
        "마음의 소리에 귀를 기울여 보세요. 진정으로 원하는 것을 알게 될 거예요.",
        "집 안을 정리정돈하며 기분 전환을 해보는 건 어떨까요?"
    ],
    "사자자리": [
        "자신감이 넘치는 하루입니다. 리더십을 발휘하여 주변을 이끌어보세요.",
        "당신의 재능과 매력이 빛을 발하는 날입니다.",
        "작은 성공에 스스로를 칭찬하며 자신감을 더욱 키워보세요."
    ],
    "처녀자리": [
        "꼼꼼함과 분석력이 돋보이는 날입니다. 계획한 일을 차근차근 해결해나가세요.",
        "사소한 부분까지 신경 쓰면 더 완벽한 결과를 얻을 수 있습니다.",
        "건강 관리에 신경 쓰면 좋은 하루가 될 거예요."
    ],
    "천칭자리": [
        "균형 감각이 중요한 날입니다. 일과 휴식의 조화를 잘 맞춰보세요.",
        "주변 사람들과의 관계가 더욱 돈독해지는 계기가 생길 수 있습니다.",
        "아름다운 것을 보며 미적 감각을 충전해보세요."
    ],
    "전갈자리": [
        "집중력이 높아지는 날입니다. 중요한 일에 몰두하면 좋은 성과를 낼 수 있어요.",
        "마음속 깊은 곳을 들여다보며 자신을 성찰하는 시간을 가져보세요.",
        "신비로운 매력으로 주변 사람들의 시선을 사로잡을 수 있습니다."
    ],
    "사수자리": [
        "모험심과 도전 정신이 솟아나는 날입니다. 새로운 세계를 향해 나아가 보세요.",
        "긍정적인 에너지가 가득하여 주변 사람들에게도 좋은 영향을 줍니다.",
        "여행 계획을 세우거나 새로운 취미를 시작하기에 좋은 날입니다."
    ],
    "염소자리": [
        "성실함과 책임감이 빛을 발하는 하루입니다. 맡은 바를 완벽하게 해낼 수 있어요.",
        "목표를 향한 꾸준한 노력이 결실을 맺기 시작합니다.",
        "장기적인 계획을 세우고 미래를 준비하기에 좋은 시기입니다."
    ]
}


# 생년월일을 기반으로 별자리를 찾아주는 함수
def get_zodiac_sign(month, day):
    """
    월(month)과 일(day)을 입력받아 해당하는 별자리를 반환합니다.
    """
    if (month == 1 and day >= 20) or (month == 2 and day <= 18):
        return "물병자리"
    elif (month == 2 and day >= 19) or (month == 3 and day <= 20):
        return "물고기자리"
    elif (month == 3 and day >= 21) or (month == 4 and day <= 19):
        return "양자리"
    elif (month == 4 and day >= 20) or (month == 5 and day <= 20):
        return "황소자리"
    elif (month == 5 and day >= 21) or (month == 6 and day <= 21):
        return "쌍둥이자리"
    elif (month == 6 and day >= 22) or (month == 7 and day <= 22):
        return "게자리"
    elif (month == 7 and day >= 23) or (month == 8 and day <= 22):
        return "사자자리"
    elif (month == 8 and day >= 23) or (month == 9 and day <= 23):
        return "처녀자리"
    elif (month == 9 and day >= 24) or (month == 10 and day <= 22):
        return "천칭자리"
    elif (month == 10 and day >= 23) or (month == 11 and day <= 22):
        return "전갈자리"
    elif (month == 11 and day >= 23) or (month == 12 and day <= 21):
        return "사수자리"
    else:
        return "염소자리"

# --- Streamlit 앱의 메인 코드 ---

# 앱의 제목을 설정합니다.
st.title("🌟 별자리로 알아보는 오늘의 운세")

# 세션 상태(Session State) 초기화
# 'result'라는 키가 세션 상태에 없으면, 빈 문자열로 초기화합니다.
# 이렇게 하면 사용자가 버튼을 누르기 전까지는 결과가 보이지 않습니다.
if 'result' not in st.session_state:
    st.session_state.result = ""

# 사용자로부터 생년월일을 입력받습니다.
# date_input 위젯을 사용하며, 기본값은 오늘 날짜로 설정합니다.
birth_date = st.date_input(
    "🎂 당신의 생년월일을 선택해주세요.",
    datetime.date.today(),
    min_value=datetime.date(1950, 1, 1),
    max_value=datetime.date.today()
)

# '운세 보기' 버튼을 만듭니다.
# 이 버튼을 클릭하면 if 문 안의 코드가 실행됩니다.
if st.button("🔮 운세 보기"):
    # 입력받은 날짜에서 월과 일을 추출합니다.
    month = birth_date.month
    day = birth_date.day

    # 별자리 계산 함수를 호출합니다.
    zodiac_sign = get_zodiac_sign(month, day)
    
    # 해당 별자리에 맞는 운세 목록에서 무작위로 하나를 선택합니다.
    fortune = random.choice(FORTUNES[zodiac_sign])

    # 결과를 f-string을 사용하여 보기 좋은 문장으로 만듭니다.
    result_text = f"당신의 별자리는 **{zodiac_sign}**이군요!\n\n오늘의 운세는... \n\n**✨ {fortune}**"
    
    # 생성된 결과 문장을 세션 상태에 저장합니다.
    st.session_state.result = result_text

# 세션 상태에 결과가 저장되어 있다면, 화면에 표시합니다.
if st.session_state.result:
    st.markdown("---") # 구분선 추가
    st.success(st.session_state.result) # success 박스로 결과를 보기 좋게 표시